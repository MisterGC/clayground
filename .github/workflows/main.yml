name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Prevent multiple runs of the same workflow on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


env:
  QT_VERSION: '6.8.*'
  QT_MODULES: 'qtmultimedia qtquick3d qtquick3dphysics qtshadertools qt5compat qtimageformats'
  CMAKE_BUILD_TYPE: Release
  AQT_VERSION: '==3.1.21'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            qt-host: linux
            qt-arch: linux_gcc_64
          - os: windows-2022
            qt-host: windows
            qt-arch: win64_msvc2022_64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ env.QT_VERSION }}
        host: ${{ matrix.qt-host }}
        target: 'desktop'
        arch: ${{ matrix.qt-arch }}
        modules: ${{ env.QT_MODULES }}
        aqtversion: ${{ env.AQT_VERSION }}

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libxkbcommon-dev libvulkan-dev

    - name: Install Windows Dependencies
      if: runner.os == 'Windows'
      run: choco install ninja -y
      shell: cmd

    - name: Setup MSVC
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: |
        cmake -B build -GNinja -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DQT_QMAKE_EXECUTABLE=qmake ${{ runner.os == 'Windows' && '-DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl' || '' }} .

    - name: Build
      run: cmake --build build
      env:
        CL: /MP  # Enable parallel compilation on Windows

    - name: Test
      working-directory: build
      run: ctest --output-on-failure
