// (c) Clayground Contributors - MIT License, see "LICENSE" file

#include <QGuiApplication>
#include <QQmlApplicationEngine>
#include <QDebug>
${CLAY_APP_STYLE_INCLUDE}

${CLAYGROUND_IMPORT_PLUGINS}

int main(int argc, char *argv[])
{
    QGuiApplication app(argc, argv);
    QQmlApplicationEngine engine;

    auto runAsAutoTest = QGuiApplication::platformName() == "minimal";
    if (runAsAutoTest) {
        QObject::connect(&engine,
                         &QQmlApplicationEngine::warnings,
                         [=] (const QList<QQmlError>& warnings) {
            for (auto& w: warnings) qCritical() << w.toString();
            exit(1);
        }
        );
    }

    // Make the app's Qml resources available
    engine.addImportPath(QStringLiteral(":/"));

// On macOS the plugins are deployed to a dir where Qt
// automatically loads from (within <app-package>/Resources/qml)
#ifndef CLAYPLUGIN_LINKING_STATIC
    #if defined(_WIN32) || defined(__linux__)
        engine.addImportPath(QCoreApplication::applicationDirPath() + "/qml");
    #endif
#endif

    // Optionally set the style, if not set, the system default is used
    ${CLAY_APP_SET_STYLE_IF_NOT_AUTO}

    // Clayground expects that each app has a Main.qml as entry point
    engine.loadFromModule("${CLAY_APP_NAME}", "Main");
    return app.exec();
}
